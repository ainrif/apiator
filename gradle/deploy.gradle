import org.ajoberstar.grgit.operation.OpenOp

buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'org.ajoberstar:gradle-git:1.3.2'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.5'
    }
}

apply plugin: "org.ajoberstar.grgit"
apply plugin: "com.jfrog.bintray"

ext.sharedManifest = manifest {
    attributes 'Implementation-Vendor': group,
            'Implementation-Title': name,
            'Implementation-Version': version
}

jar {
    manifest {
        from sharedManifest
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
    manifest {
        from sharedManifest
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar
        }
    }
}

bintray {
    if (project.hasProperty('bintray_api_user') && project.hasProperty('bintray_api_key')) {
        user = bintray_api_user
        key = bintray_api_key
    }

    publications = ['mavenJava']

    dryRun = false
    publish = true
    pkg {
        repo = 'maven'
        userOrg = 'ainrif'
        name = rootProject.name
        desc = 'Documentation generator for rest api on java'
        websiteUrl = 'https://bitbucket.org/ainrif/apiator'
        issueTrackerUrl = 'https://bitbucket.org/ainrif/apiator/issues'
        vcsUrl = 'https://bitbucket.org/ainrif/apiator.git'
        licenses = ['Apache-2.0']
        labels = ['rest', 'api', 'docs', 'groovy']
        publicDownloadNumbers = true
        version {
            vcsTag = project.version
        }
    }
}

bintrayUpload {
    def git = new OpenOp(dir: '.').call()
    onlyIf {
        'master' == git.branch.current.name
    }
    doLast {
        git.tag.add(name: project.version, annotate: false, force: true)
        git.push(all: false)
        git.push(tags: true)
    }
}

publish.dependsOn bintrayUpload